"""Initial

Revision ID: 51a73d55254
Revises: None
Create Date: 2015-11-25 19:14:26.471906

"""

# revision identifiers, used by Alembic.
revision = '51a73d55254'
down_revision = None

from alembic import op
import sqlalchemy as sa

import sqlalchemy_utils
from memorizer import models


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alternative_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('text', sa.String(), autoincrement=False, nullable=True),
    sa.Column('correct', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('question_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_alternative_version_end_transaction_id'), 'alternative_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_alternative_version_operation_type'), 'alternative_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_alternative_version_transaction_id'), 'alternative_version', ['transaction_id'], unique=False)
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=80), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('course_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('code', sa.String(length=80), autoincrement=False, nullable=True),
    sa.Column('name', sa.String(length=120), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_course_version_end_transaction_id'), 'course_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_course_version_operation_type'), 'course_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_course_version_transaction_id'), 'course_version', ['transaction_id'], unique=False)
    op.create_table('exam_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('course_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_exam_version_end_transaction_id'), 'exam_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_exam_version_operation_type'), 'exam_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_exam_version_transaction_id'), 'exam_version', ['transaction_id'], unique=False)
    op.create_table('question_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('text', sa.String(), autoincrement=False, nullable=True),
    sa.Column('image', sa.String(), autoincrement=False, nullable=True),
    sa.Column('exam_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('reason', sa.String(), autoincrement=False, nullable=True),
    sa.Column('type', sqlalchemy_utils.types.choice.ChoiceType(models.Question.TYPES), autoincrement=False, nullable=True),
    sa.Column('correct', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_question_version_end_transaction_id'), 'question_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_question_version_operation_type'), 'question_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_question_version_transaction_id'), 'question_version', ['transaction_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sqlalchemy_utils.types.password.PasswordType(schemes=['pbkdf2_sha512']), nullable=True),
    sa.Column('registered', sa.Boolean(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('user_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('username', sa.String(), autoincrement=False, nullable=True),
    sa.Column('password', sqlalchemy_utils.types.password.PasswordType(schemes=['pbkdf2_sha512']), autoincrement=False, nullable=True),
    sa.Column('registered', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('admin', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_user_version_end_transaction_id'), 'user_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_user_version_operation_type'), 'user_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_user_version_transaction_id'), 'user_version', ['transaction_id'], unique=False)
    op.create_table('exam',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('remote_addr', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_user_id'), 'transaction', ['user_id'], unique=False)
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('exam_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('type', sqlalchemy_utils.types.choice.ChoiceType(models.Question.TYPES), nullable=True),
    sa.Column('correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alternative',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('correct', sa.Boolean(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('correct', sa.Boolean(), nullable=True),
    sa.Column('reset', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stats')
    op.drop_table('alternative')
    op.drop_table('question')
    op.drop_index(op.f('ix_transaction_user_id'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_table('exam')
    op.drop_index(op.f('ix_user_version_transaction_id'), table_name='user_version')
    op.drop_index(op.f('ix_user_version_operation_type'), table_name='user_version')
    op.drop_index(op.f('ix_user_version_end_transaction_id'), table_name='user_version')
    op.drop_table('user_version')
    op.drop_table('user')
    op.drop_index(op.f('ix_question_version_transaction_id'), table_name='question_version')
    op.drop_index(op.f('ix_question_version_operation_type'), table_name='question_version')
    op.drop_index(op.f('ix_question_version_end_transaction_id'), table_name='question_version')
    op.drop_table('question_version')
    op.drop_index(op.f('ix_exam_version_transaction_id'), table_name='exam_version')
    op.drop_index(op.f('ix_exam_version_operation_type'), table_name='exam_version')
    op.drop_index(op.f('ix_exam_version_end_transaction_id'), table_name='exam_version')
    op.drop_table('exam_version')
    op.drop_index(op.f('ix_course_version_transaction_id'), table_name='course_version')
    op.drop_index(op.f('ix_course_version_operation_type'), table_name='course_version')
    op.drop_index(op.f('ix_course_version_end_transaction_id'), table_name='course_version')
    op.drop_table('course_version')
    op.drop_table('course')
    op.drop_index(op.f('ix_alternative_version_transaction_id'), table_name='alternative_version')
    op.drop_index(op.f('ix_alternative_version_operation_type'), table_name='alternative_version')
    op.drop_index(op.f('ix_alternative_version_end_transaction_id'), table_name='alternative_version')
    op.drop_table('alternative_version')
    ### end Alembic commands ###
